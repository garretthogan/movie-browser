{"version":3,"sources":["api.js","Score.js","Icons/Star.js","MovieListItem.js","MovieList.js","AppBar.js","pages/MovieListPage.js","MovieDetails.js","Icons/Close.js","pages/MovieDetailsPage.js","App.js","Router.js","serviceWorker.js","index.js"],"names":["baseUrl","discover","movieInfo","key","process","Score","score","sx","display","color","bg","px","py","borderRadius","fontSize","Math","trunc","Star","isFilled","onClick","style","float","xmlns","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","className","points","MovieListItem","movie","favorites","onClickDetails","p","border","boxShadow","pb","title","includes","id","width","src","poster_path","alignItems","paddingBottom","textAlign","pt","moment","release_date","format","variant","popularity","MovieList","movies","paddingTop","map","AppBar","children","position","fontWeight","mx","MovieListPage","MovieDetails","onFavorite","paddingRight","height","overview","Close","x1","y1","x2","y2","MovieDetailsPage","props","params","useLocation","pathname","split","length","useState","setMovie","fetch","then","res","json","catch","console","error","getMovieById","to","App","setMovies","selectedMovie","setSelectedMovie","favoriteMovies","setFavoriteMovies","history","useHistory","useEffect","year","releaseYear","results","sort","a","b","path","isFav","filter","m","push","Router","Boolean","window","location","hostname","match","require","config","ReactDOM","render","theme","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b0c30e7d.chunk.js","sourcesContent":["const baseUrl = 'https://api.themoviedb.org/3';\nconst discover = `${baseUrl}/discover/movie`;\nconst movieInfo = `${baseUrl}/movie`;\nconst key = `api_key=${process.env.REACT_APP_KEY}`;\nconst byPopularity = 'sort_by=popularity.desc';\nconst releaseYear = year => `primary_release_year=${year}`;\n\nexport const getPopularMoviesByYear = year =>\n  fetch(`${discover}?${releaseYear(year)}&${byPopularity}&${key}`)\n    .then(res => res.json())\n    .then(res => {\n      return res.results.sort((a, b) =>\n        Math.trunc(a.popularity) > Math.trunc(b.popularity) ? -1 : 1\n      );\n    })\n    .catch(console.error);\n\nexport const getMovieById = id =>\n  fetch(`${movieInfo}/${id}?${key}`)\n    .then(res => res.json())\n    .catch(console.error);\n","import React from 'react';\nimport { Box, Text } from 'rebass';\n\nfunction Score({ score, sx }) {\n  return (\n    <Box\n      sx={{\n        display: 'inline-block',\n        color: '#0e1111',\n        bg: '#FFD700',\n        px: [2, 3],\n        py: [1, 2, 3],\n        borderRadius: 9999,\n        ...sx\n      }}\n    >\n      <Text fontSize={[1, 2, 3]}>{Math.trunc(score)}</Text>\n    </Box>\n  );\n}\n\nexport default Score;\n","import React from 'react';\n\nfunction Star({ color, isFilled, onClick }) {\n  return (\n    <div onClick={onClick} style={{ display: 'inline-block', float: 'right' }}>\n      <svg\n        xmlns='http://www.w3.org/2000/svg'\n        viewBox='0 0 24 24'\n        fill={isFilled ? 'yellow' : 'none'}\n        stroke={color}\n        strokeWidth='2'\n        strokeLinecap='round'\n        strokeLinejoin='round'\n        className='feather feather-star'\n      >\n        <polygon points='12 2 15.09 8.26 22 9.27 17 14.14 18.18 21.02 12 17.77 5.82 21.02 7 14.14 2 9.27 8.91 8.26 12 2'></polygon>\n      </svg>\n    </div>\n  );\n}\n\nexport default Star;\n","import React from 'react';\nimport { Card, Image, Box, Text, Flex, Button } from 'rebass';\nimport moment from 'moment';\nimport Score from './Score';\nimport Star from './Icons/Star';\n\nfunction MovieListItem({ movie, favorites, onClickDetails }) {\n  return (\n    <Card\n      sx={{\n        p: 2,\n        border: '0.3px solid #808080',\n        borderRadius: 2,\n        boxShadow: '0px 2px 10px #e0e0e0;'\n      }}\n    >\n      <Box pb={2}>\n        <Text fontSize={[2, 3, 4]}>\n          {movie.title}\n          <Star color='#808080' isFilled={favorites.includes(movie.id)} />\n        </Text>\n      </Box>\n      <Flex>\n        <Box width={1 / 4}>\n          <Image\n            sx={{ width: [84, 128, 256] }}\n            src={`https://image.tmdb.org/t/p/w370_and_h556_bestv2${movie.poster_path}`}\n          />\n        </Box>\n        <Box\n          display='flex'\n          sx={{ alignItems: 'center', paddingBottom: '24px' }}\n          width={1 / 1.5}\n        >\n          <Box py={2} sx={{ textAlign: 'center', width: '100%' }}>\n            <Text fontSize={[1, 2, 3]} pt={2} pb={[3, 4]}>\n              Released {moment(movie.release_date).format('MMMM Do YYYY')}\n            </Text>\n            <Button variant='outline' onClick={() => onClickDetails(movie)}>\n              Show Details\n            </Button>\n          </Box>\n        </Box>\n        <Box width={1 / 8} display='flex' sx={{ alignItems: 'center' }}>\n          <Score score={movie.popularity} />\n        </Box>\n      </Flex>\n    </Card>\n  );\n}\n\nexport default MovieListItem;\n","import React from 'react';\nimport { Box } from 'rebass';\nimport MovieListItem from './MovieListItem';\n\nfunction MovieList({ movies, favorites, onClickDetails }) {\n  return (\n    <div style={{ paddingTop: '54px' }}>\n      {movies.map(movie => (\n        <Box key={movie.title} sx={{ p: 1 }}>\n          <MovieListItem\n            favorites={favorites}\n            onClickDetails={onClickDetails}\n            movie={movie}\n          />\n        </Box>\n      ))}\n    </div>\n  );\n}\n\nexport default MovieList;\n","import React from 'react';\nimport { Box, Text, Flex } from 'rebass';\n\nfunction AppBar({ title, children }) {\n  return (\n    <Flex\n      sx={{ position: 'fixed', width: '100%', textAlign: 'center' }}\n      py={2}\n      px={2}\n      color='white'\n      bg='black'\n      alignItems='center'\n    >\n      <Text fontSize={[1, 2]} sx={{ width: '100%' }} p={2} fontWeight='bold'>\n        {title}\n      </Text>\n      {children}\n      <Box mx='auto' />\n    </Flex>\n  );\n}\n\nexport default AppBar;\n","import React from 'react';\nimport MovieList from '../MovieList';\nimport AppBar from '../AppBar';\n\nfunction MovieListPage({ onClickDetails, movies, favorites }) {\n  return (\n    <div>\n      <AppBar title='Movies' />\n      <MovieList\n        favorites={favorites}\n        onClickDetails={onClickDetails}\n        movies={movies}\n      />\n    </div>\n  );\n}\n\nexport default MovieListPage;\n","import React from 'react';\nimport { Image, Box, Text, Flex } from 'rebass';\nimport moment from 'moment';\nimport Score from './Score';\nimport Star from './Icons/Star';\n\nfunction MovieDetails({ movie, onFavorite, favorites }) {\n  const onClickFavorite = () => {\n    onFavorite(favorites, movie);\n  };\n\n  return (\n    <Box style={{ paddingTop: '64px' }}>\n      <Flex px={2}>\n        <Box p={[0, 2]} width={1 / 3}>\n          <Image\n            sx={{ width: 256 }}\n            src={`https://image.tmdb.org/t/p/w370_and_h556_bestv2${movie.poster_path}`}\n          />\n        </Box>\n        <Box\n          width={1 / 2}\n          sx={{\n            display: 'flex',\n            alignItems: 'center'\n          }}\n          px={3}\n        >\n          <Text sx={{ display: 'inline' }} fontSize={[1, 2, 3]}>\n            Released {moment(movie.release_date).format('MMMM Do YYYY')}\n          </Text>\n        </Box>\n        <Box\n          width={1 / 8}\n          pt={[0, 2]}\n          sx={{\n            display: 'inline',\n            paddingRight: 2\n          }}\n        >\n          <Score sx={{ float: 'right' }} score={movie.popularity} />\n        </Box>\n        <Box\n          width={1 / 10}\n          pt={[0, 3]}\n          sx={{\n            display: 'inline'\n          }}\n        >\n          <Star\n            color='black'\n            isFilled={favorites.includes(movie.id)}\n            onClick={onClickFavorite}\n            width='36'\n            height='36'\n          />\n        </Box>\n      </Flex>\n      <Box px={2} pt={2}>\n        {movie.overview}\n      </Box>\n    </Box>\n  );\n}\n\nexport default MovieDetails;\n","import React from 'react';\n\nfunction Close() {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='24'\n      height='24'\n      viewBox='0 0 24 24'\n      fill='none'\n      stroke='currentColor'\n      strokeWidth='2'\n      strokeLinecap='round'\n      strokeLinejoin='round'\n      className='feather feather-x'\n    >\n      <line x1='18' y1='6' x2='6' y2='18'></line>\n      <line x1='6' y1='6' x2='18' y2='18'></line>\n    </svg>\n  );\n}\n\nexport default Close;\n","import React, { useState } from 'react';\nimport { useLocation, Link } from 'react-router-dom';\nimport AppBar from '../AppBar';\nimport MovieDetails from '../MovieDetails';\nimport { getMovieById } from '../api';\nimport Close from '../Icons/Close';\n\nfunction MovieDetailsPage(props) {\n  const location = useLocation();\n  const params = location.pathname.split('/');\n  const id = params[params.length - 1];\n\n  const [movie, setMovie] = useState({ ...props.movie });\n\n  if (!movie.id) {\n    getMovieById(id).then(setMovie);\n  }\n\n  return (\n    <div>\n      <AppBar title={movie.title}>\n        <Link style={{ color: 'white', paddingTop: '4px' }} to='/'>\n          <Close />\n        </Link>\n      </AppBar>\n      {movie.id && (\n        <MovieDetails\n          favorites={props.favorites}\n          onFavorite={props.onFavorite}\n          movie={movie}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default MovieDetailsPage;\n","import React, { useEffect, useState } from 'react';\nimport { Switch, Route, useHistory } from 'react-router-dom';\nimport { getPopularMoviesByYear } from './api';\nimport MovieListPage from './pages/MovieListPage';\nimport MovieDetailsPage from './pages/MovieDetailsPage';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [selectedMovie, setSelectedMovie] = useState();\n  const [favoriteMovies, setFavoriteMovies] = useState([]);\n\n  const history = useHistory();\n\n  const handleClickDetails = movie => {\n    history.push(`/movie/${movie.id}`);\n    setSelectedMovie(movie);\n  };\n\n  const handleClickFavorite = (favorites, movie) => {\n    const isFav = favoriteMovies.includes(movie.id);\n    setFavoriteMovies(\n      isFav\n        ? favoriteMovies.filter(m => m.id === movie.id)\n        : [...favoriteMovies, movie.id]\n    );\n  };\n\n  useEffect(() => {\n    getPopularMoviesByYear(2016).then(res => setMovies(res));\n  }, []);\n\n  return (\n    <div>\n      <Switch>\n        <Route path='/movie/:id'>\n          <MovieDetailsPage\n            onFavorite={handleClickFavorite}\n            movie={selectedMovie}\n            favorites={favoriteMovies}\n          />\n        </Route>\n        <Route path='/'>\n          <MovieListPage\n            favorites={favoriteMovies}\n            onClickDetails={handleClickDetails}\n            movies={movies}\n          />\n        </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport { HashRouter } from 'react-router-dom';\n\nfunction Router({ children }) {\n  return <HashRouter>{children}</HashRouter>;\n}\n\nexport default Router;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from 'emotion-theming';\nimport theme from '@rebass/preset';\nimport './index.css';\nimport App from './App';\nimport Router from './Router';\nimport * as serviceWorker from './serviceWorker';\n\nrequire('dotenv').config();\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <Router>\n      <App />\n    </Router>\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}